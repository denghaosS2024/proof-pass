// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * ZK Ticketing API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// DefaultAPIService is a service that implements the logic for the DefaultAPIServicer
// This service should implement the business logic for every endpoint for the DefaultAPI API.
// Include any external packages or services that will be required by this service.
type DefaultAPIService struct {
}

// NewDefaultAPIService creates a default api service
func NewDefaultAPIService() *DefaultAPIService {
	return &DefaultAPIService{}
}

// EventsEventIdGet - Get event details
func (s *DefaultAPIService) EventsEventIdGet(ctx context.Context, eventId string) (ImplResponse, error) {
	// TODO - update EventsEventIdGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Event{}) or use other options such as http.Ok ...
	// return Response(200, Event{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("EventsEventIdGet method not implemented")
}

// EventsGet - Get list of events
func (s *DefaultAPIService) EventsGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update EventsGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []Event{}) or use other options such as http.Ok ...
	// return Response(200, []Event{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("EventsGet method not implemented")
}

// HealthGet - Check the health of the API
func (s *DefaultAPIService) HealthGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update HealthGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("HealthGet method not implemented")
}
